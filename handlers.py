from aiogram import types, Dispatcher
from aiogram.types import CallbackQuery, MediaGroup, InputMediaDocument
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from create_bot import dp, bot
from texts import *
from keyboards import * 
from database import *

async def cmdStart(message: types.Message):
    await message.answer(text=welcomeMessage, reply_markup=firstKeyboard)
    await sql_start_bot_write(message.from_user.id)


    

async def catalog(message: types.Message):
    await message.answer(text="üõí –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=catalogKeyboard)
async def connection(message: types.Message):
    await message.answer(text="‚úâÔ∏è –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–∞–º:\n\
\n\
@lucky99_girl\n\
@alina666vagner\n\
\n\
–ï—Å–ª–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—Å—É–¥–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É: +7 902 356-55-74.")
async def cosmetic(callback_query: types.CallbackQuery):
    res = await sql_read_cosmetic()
    if len(res) != 0:
        for i in res:
            #await bot.send_photo(chat_id=callback_query.from_user.id,photo=i[1],caption=f"üéÅ –ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\nüìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {i[3]}\nüí∞ –¶–µ–Ω–∞: {i[4]}‚ÇΩ\nüè∑Ô∏è –ê—Ä—Ç–∏–∫—É–ª: {i[5]}")

            await bot.send_photo(chat_id=callback_query.from_user.id, photo = i[1], caption= f'–ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {i[3]}\n–¶–µ–Ω–∞: {i[4]}‚ÇΩ\n–ê—Ä—Ç–∏–∫—É–ª: {i[5]}')
    else:
        await bot.send_message(chat_id=callback_query.from_user.id, text="–¢–æ–≤–∞—Ä–æ–≤ –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∫–∞ –Ω–µ—Ç.")

async def sweets(callback_query: types.CallbackQuery):
    res = await sql_read_sweets()
    if len(res) != 0:
        for i in res:
            await bot.send_photo(chat_id=callback_query.from_user.id,photo=i[1],caption=f"üéÅ –ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\nüìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {i[3]}\nüí∞ –¶–µ–Ω–∞: {i[4]}‚ÇΩ\nüè∑Ô∏è –ê—Ä—Ç–∏–∫—É–ª: {i[5]}")
            #await bot.send_photo(chat_id=callback_query.from_user.id, photo = i[1], caption= f'–ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {i[3]}\n–ê—Ä—Ç–∏–∫—É–ª: {i[4]}')
    else:
        await bot.send_message(chat_id=callback_query.from_user.id, text="–¢–æ–≤–∞—Ä–æ–≤ –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∫–∞ –Ω–µ—Ç.")

async def box(callback_query: types.CallbackQuery):
    res = await sql_read_box()
    if len(res) != 0:
        for i in res:
            await bot.send_photo(chat_id=callback_query.from_user.id,photo=i[1],caption=f"üéÅ –ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\nüìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {i[3]}\nüí∞ –¶–µ–Ω–∞: {i[4]}‚ÇΩ\nüè∑Ô∏è –ê—Ä—Ç–∏–∫—É–ª: {i[5]}")
            #await bot.send_photo(chat_id=callback_query.from_user.id, photo = i[1], caption= f'–ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {i[3]}\n–ê—Ä—Ç–∏–∫—É–ª: {i[4]}')
    else:
        await bot.send_message(chat_id=callback_query.from_user.id, text="–¢–æ–≤–∞—Ä–æ–≤ –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∫–∞ –Ω–µ—Ç.")

async def accessories(callback_query: types.CallbackQuery):
    res = await sql_read_accessories()
    if len(res) != 0:
        for i in res:
            await bot.send_photo(chat_id=callback_query.from_user.id,photo=i[1],caption=f"üéÅ –ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\nüìÑ –û–ø–∏—Å–∞–Ω–∏–µ: {i[3]}\nüí∞ –¶–µ–Ω–∞: {i[4]}‚ÇΩ\nüè∑Ô∏è –ê—Ä—Ç–∏–∫—É–ª: {i[5]}")
            #wait bot.send_photo(chat_id=callback_query.from_user.id, photo = i[0], caption= f'–ù–∞–∑–≤–∞–Ω–∏–µ: {i[1]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {i[2]}\n–ê—Ä—Ç–∏–∫—É–ª: {i[3]}')
    else:
         await bot.send_message(chat_id=callback_query.from_user.id, text="–¢–æ–≤–∞—Ä–æ–≤ –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∫–∞ –Ω–µ—Ç.")

ADMIN = [1313463136, 1366797671, 5605262004]
async def adminInput(message: types.Message):
    if message.from_user.id in ADMIN:
        await message.answer("–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —ç—Ç–æ–≥–æ –±–æ—Ç–∞.", reply_markup= adminKeyboard)

class FSMAdd(StatesGroup):
    a0 = State()
    a1 = State()
    a2 = State()
    a3 = State()
    a4 = State()
    a5 = State()



async def choosingCategory(message: types.Message):
    await message.answer(text = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä.", reply_markup=choosingCategoryKeyboard) 
    await FSMAdd.a0.set()

async def cmdStop(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer(text="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

async def addProduct(callback_query: types.CallbackQuery, state: FSMContext):
    tmp = callback_query.data.replace('add ', '')
    async with state.proxy() as data:
        data['a0'] = tmp
    await FSMAdd.next()
    await bot.send_message(chat_id=callback_query.from_user.id, text="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞")
    

async def addProduct1(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['a1'] = message.photo[0].file_id
    await FSMAdd.next()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞")

async def addProduct2(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['a2'] = message.text
    await FSMAdd.next()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞")

async def addProduct3(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['a3'] = message.text
    await FSMAdd.next()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –ø—Ä–æ–¥—É–∫—Ç–∞")

async def addProduct4(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['a4'] = message.text
    await FSMAdd.next()
    await message.answer("–û—Ç–ª–∏—á–Ω–æ! –û—Å—Ç–∞–ª–æ—Å—å —É–∫–∞–∑–∞—Ç—å –∞—Ä—Ç–∏–∫—É–ª")


async def addProduct5(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['a5'] = message.text
    await state.finish()
    await sql_write(list(data.values()))
    await message.answer("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥")


async def choosingCategoryDel(message: types.Message):
    await message.answer(text = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä", reply_markup=choosingCategoryDelKeyboard)

async def deleteProduct(callback_query: types.CallbackQuery):
    category = callback_query.data.replace('del ', '')
    if category == "cosmetic":
        res = await sql_read_cosmetic()
    elif category == "sweets":
        res = await sql_read_sweets()
    elif category == "box":
        res = await sql_read_box()
    else:
        res = await sql_read_accessories()
    if len(res) != 0:
        for i in res:
            await bot.send_photo(chat_id=callback_query.from_user.id, photo = i[1], caption= f'–ù–∞–∑–≤–∞–Ω–∏–µ: {i[2]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {i[3]}\n–ê—Ä—Ç–∏–∫—É–ª: {i[4]}', reply_markup=f(category, i[0]))
    else:
        await bot.send_message(chat_id=callback_query.from_user.id, text="–¢–æ–≤–∞—Ä–æ–≤ –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∫–∞ –Ω–µ—Ç.")


async def finishDel(callback_query: types.CallbackQuery):
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
    info = callback_query.data.replace('product ', '')
    info = info.split("|")
    category = info[0]
    id = int(info[1])
    await sql_delete(category, id)

async def checkCountUsers(message: types.Message):
    count = await sql_start_bot_read()
    await message.answer(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π, –∑–∞–ø—É—Å—Ç–∏–≤—à–∏—Ö –±–æ—Ç–∞ - {count}")

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(cmdStart, commands=['start'])
    dp.register_message_handler(cmdStop, commands=['stop'], state="*")
    dp.register_message_handler(catalog, text = '–ö–∞—Ç–∞–ª–æ–≥')
    dp.register_message_handler(connection, text = '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏')
    dp.register_callback_query_handler(cosmetic, lambda c: c.data == "cosmetic")
    dp.register_callback_query_handler(sweets, lambda c: c.data == "sweets")
    dp.register_callback_query_handler(box, lambda c: c.data == "box")
    dp.register_callback_query_handler(accessories, lambda c: c.data == "accessories")
    dp.register_message_handler(adminInput, commands=['admin'])
    dp.register_message_handler(choosingCategory, text = "–î–æ–±–∞–≤–∏—Ç—å")
    dp.register_callback_query_handler(addProduct, lambda x: x.data and x.data.startswith('add '), state=FSMAdd.a0)
    dp.register_message_handler(addProduct1,content_types=['photo'], state=FSMAdd.a1)
    dp.register_message_handler(addProduct2, state=FSMAdd.a2)
    dp.register_message_handler(addProduct3, state=FSMAdd.a3)
    dp.register_message_handler(addProduct4, state=FSMAdd.a4)
    dp.register_message_handler(addProduct5, state=FSMAdd.a5)
    dp.register_message_handler(choosingCategoryDel, text = "–£–¥–∞–ª–∏—Ç—å")
    dp.register_message_handler(checkCountUsers, text = "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    dp.register_callback_query_handler(deleteProduct, lambda x: x.data and x.data.startswith('del '))
    dp.register_callback_query_handler(finishDel, lambda x: x.data and x.data.startswith('product '))
    
